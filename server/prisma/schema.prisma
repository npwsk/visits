// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     String
  visits   Visit[]
}

model Visit {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  clinic      Clinic   @relation(fields: [clinicId], references: [id])
  clinicId    Int
  contact     Contact  @relation(fields: [contactId], references: [id])
  contactId   Int
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  status      String
  report      String
}

model Clinic {
  id             Int            @id @default(autoincrement())
  name           String
  address        String
  phone          String
  email          String
  legalName      String
  inn            String
  notes          String?
  visits         Visit[]
  contactClinics ContactClinic[]
}

model Contact {
  id             Int             @id @default(autoincrement())
  firstName      String
  middleName     String
  lastName       String
  specialization String
  credentials    String
  phone          String
  email          String
  contactClinics ContactClinic[]
  visits         Visit[]
}

model ContactClinic {
  id        Int     @id @default(autoincrement())
  clinic    Clinic  @relation(fields: [clinicId], references: [id])
  clinicId  Int
  contact   Contact @relation(fields: [contactId], references: [id])
  contactId Int
  position  String
}

model Discount {
  id             Int      @id @default(autoincrement())
  description    String
  validityPeriod DateTime
  conditions     String
}
